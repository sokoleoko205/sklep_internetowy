{"ast":null,"code":"var getInputIdOrName = function (attribute, range, position) {\n  if (range && !Array.isArray(attribute)) {\n    return \"\".concat(attribute, \"-\").concat(position, \"-date\");\n  }\n  if (Array.isArray(attribute)) {\n    return position === 'start' ? attribute[0] : attribute[1];\n  }\n  return attribute;\n};\nvar getLocalDateFromString = function (string, locale, time) {\n  if (!Number.isNaN(Date.parse(string))) {\n    return new Date(Date.parse(string));\n  }\n  var date = new Date(2013, 11, 31, 17, 19, 22);\n  var regex = time ? date.toLocaleString(locale) : date.toLocaleDateString(locale);\n  regex = regex.replace('2013', '(?<year>[0-9]{2,4})').replace('12', '(?<month>[0-9]{1,2})').replace('31', '(?<day>[0-9]{1,2})');\n  if (time) {\n    regex = regex.replace('5', '(?<hour>[0-9]{1,2})').replace('17', '(?<hour>[0-9]{1,2})').replace('19', '(?<minute>[0-9]{1,2})').replace('22', '(?<second>[0-9]{1,2})').replace('PM', '(?<ampm>[A-Z]{2})');\n  }\n  var rgx = new RegExp(\"\".concat(regex));\n  var partials = string.match(rgx);\n  if (partials === null) return;\n  var newDate = partials.groups && (time ? new Date(Number(partials.groups['year']), Number(partials.groups['month']) - 1, Number(partials.groups['day']), partials.groups['ampm'] ? partials.groups['ampm'] === 'PM' ? Number(partials.groups['hour']) + 12 : Number(partials.groups['hour']) : Number(partials.groups['hour']), Number(partials.groups['minute']), Number(partials.groups['second'])) : new Date(Number(partials.groups['year']), Number(partials.groups['month']) - 1, Number(partials.groups['day'])));\n  return newDate;\n};\nexport { getInputIdOrName, getLocalDateFromString };","map":{"version":3,"names":["getInputIdOrName","attribute","range","position","Array","isArray","concat","getLocalDateFromString","string","locale","time","Number","isNaN","Date","parse","date","regex","toLocaleString","toLocaleDateString","replace","rgx","RegExp","partials","match","newDate","groups"],"sources":["C:\\Users\\5m\\node_modules\\@coreui\\react-pro\\src\\components\\date-range-picker\\utils.ts"],"sourcesContent":["export const getInputIdOrName = (\n  attribute: string | [string, string],\n  range: boolean,\n  position?: 'start' | 'end',\n): string => {\n  if (range && !Array.isArray(attribute)) {\n    return `${attribute}-${position}-date`\n  }\n\n  if (Array.isArray(attribute)) {\n    return position === 'start' ? attribute[0] : attribute[1]\n  }\n\n  return attribute\n}\n\nexport const getLocalDateFromString = (string: string, locale: string, time?: boolean) => {\n  if (!Number.isNaN(Date.parse(string))) {\n    return new Date(Date.parse(string))\n  }\n\n  const date = new Date(2013, 11, 31, 17, 19, 22)\n  let regex = time ? date.toLocaleString(locale) : date.toLocaleDateString(locale)\n  regex = regex\n    .replace('2013', '(?<year>[0-9]{2,4})')\n    .replace('12', '(?<month>[0-9]{1,2})')\n    .replace('31', '(?<day>[0-9]{1,2})')\n\n  if (time) {\n    regex = regex\n      .replace('5', '(?<hour>[0-9]{1,2})')\n      .replace('17', '(?<hour>[0-9]{1,2})')\n      .replace('19', '(?<minute>[0-9]{1,2})')\n      .replace('22', '(?<second>[0-9]{1,2})')\n      .replace('PM', '(?<ampm>[A-Z]{2})')\n  }\n\n  const rgx = new RegExp(`${regex}`)\n  const partials = string.match(rgx)\n\n  if (partials === null) return\n\n  const newDate =\n    partials.groups &&\n    (time\n      ? new Date(\n          Number(partials.groups['year']),\n          Number(partials.groups['month']) - 1,\n          Number(partials.groups['day']),\n          partials.groups['ampm']\n            ? (partials.groups['ampm'] === 'PM'\n              ? Number(partials.groups['hour']) + 12\n              : Number(partials.groups['hour']))\n            : Number(partials.groups['hour']),\n          Number(partials.groups['minute']),\n          Number(partials.groups['second']),\n        )\n      : new Date(\n          Number(partials.groups['year']),\n          Number(partials.groups['month']) - 1,\n          Number(partials.groups['day']),\n        ))\n\n  return newDate\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}