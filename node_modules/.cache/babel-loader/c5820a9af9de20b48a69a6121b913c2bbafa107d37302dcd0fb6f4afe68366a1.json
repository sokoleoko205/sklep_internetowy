{"ast":null,"code":"import { __rest, __assign } from '../../packages/coreui-react-pro/node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar createNativeOptions = function (options) {\n  return options && options.map(function (option, index) {\n    return option.options ? React.createElement(\"optgroup\", {\n      label: option.label,\n      key: index\n    }, createNativeOptions(option.options)) : React.createElement(\"option\", {\n      value: option.value,\n      key: index,\n      disabled: option.disabled\n    }, option.label);\n  });\n};\nvar CMultiSelectNativeSelect = forwardRef(function (_a, ref) {\n  var id = _a.id,\n    name = _a.name,\n    options = _a.options,\n    rest = __rest(_a, [\"id\", \"name\", \"options\"]);\n  return React.createElement(\"select\", __assign({\n    id: id\n  }, id && !name && {\n    name: \"\".concat(id, \"-multi-select\")\n  }, name && {\n    name: name\n  }, {\n    tabIndex: -1,\n    style: {\n      display: 'none'\n    }\n  }, rest, {\n    ref: ref\n  }), options && createNativeOptions(options));\n});\nCMultiSelectNativeSelect.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  options: PropTypes.array,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.arrayOf(PropTypes.string.isRequired)])\n};\nCMultiSelectNativeSelect.displayName = 'CMultiSelectNativeSelect';\nexport { CMultiSelectNativeSelect };","map":{"version":3,"names":["createNativeOptions","options","map","option","index","React","createElement","label","key","value","disabled","CMultiSelectNativeSelect","forwardRef","_a","ref","id","name","rest","__rest","__assign","concat","tabIndex","style","display","propTypes","PropTypes","string","array","oneOfType","number","arrayOf","isRequired","displayName"],"sources":["C:\\Users\\5m\\node_modules\\@coreui\\react-pro\\src\\components\\multi-select\\CMultiSelectNativeSelect.tsx"],"sourcesContent":["import React, { forwardRef, InputHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\n\nimport type { Option } from './types'\n\nexport interface CMultiSelectNativeSelectProps\n  extends Omit<InputHTMLAttributes<HTMLSelectElement>, 'options'> {\n  options?: Option[]\n  value?: string | number | string[]\n}\n\nconst createNativeOptions = (options: Option[]) =>\n  options &&\n  options.map((option: Option, index: number) =>\n    option.options ? (\n      <optgroup label={option.label} key={index}>\n        {createNativeOptions(option.options)}\n      </optgroup>\n    ) : (\n      <option value={option.value} key={index} disabled={option.disabled}>\n        {option.label}\n      </option>\n    ),\n  )\n\nexport const CMultiSelectNativeSelect = forwardRef<\n  HTMLSelectElement,\n  CMultiSelectNativeSelectProps\n>(({ id, name, options, ...rest }, ref) => {\n  return (\n    <select\n      id={id}\n      {...(id && !name && { name: `${id}-multi-select` })} // TODO: remove in v6\n      {...(name && { name: name })}\n      tabIndex={-1}\n      style={{ display: 'none' }}\n      {...rest}\n      ref={ref}\n    >\n      {options && createNativeOptions(options)}\n    </select>\n  )\n})\n\nCMultiSelectNativeSelect.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  options: PropTypes.array,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string.isRequired),\n  ]),\n}\n\nCMultiSelectNativeSelect.displayName = 'CMultiSelectNativeSelect'\n"],"mappings":";;;AAWA,IAAMA,mBAAmB,GAAG,SAAAA,CAACC,OAAiB;EAC5C,OAAAA,OAAO,IACPA,OAAO,CAACC,GAAG,CAAC,UAACC,MAAc,EAAEC,KAAa;IACxC,OAAAD,MAAM,CAACF,OAAO,GACZI,KAAU,CAAAC,aAAA;MAAAC,KAAK,EAAEJ,MAAM,CAACI,KAAK;MAAEC,GAAG,EAAEJ;IAAK,GACtCJ,mBAAmB,CAACG,MAAM,CAACF,OAAO,CAAC,CAC3B,GAEXI,KAAQ,CAAAC,aAAA;MAAAG,KAAK,EAAEN,MAAM,CAACM,KAAK;MAAED,GAAG,EAAEJ,KAAK;MAAEM,QAAQ,EAAEP,MAAM,CAACO;IAAQ,GAC/DP,MAAM,CAACI,KAAK,CAEhB;EARD,CAQC,CACF;AAXD,CAWC;IAEUI,wBAAwB,GAAGC,UAAU,CAGhD,UAACC,EAA8B,EAAEC,GAAG;EAAjC,IAAAC,EAAE,GAAAF,EAAA,CAAAE,EAAA;IAAEC,IAAI,GAAAH,EAAA,CAAAG,IAAA;IAAEf,OAAO,GAAAY,EAAA,CAAAZ,OAAA;IAAKgB,IAAI,GAA5BC,MAAA,CAAAL,EAAA,2BAA8B,CAAF;EAC7B,OACER,KACE,CAAAC,aAAA,WAAAa,QAAA;IAAAJ,EAAE,EAAEA;EAAE,CACF,EAACA,EAAE,IAAI,CAACC,IAAI,IAAI;IAAEA,IAAI,EAAE,EAAG,CAAAI,MAAA,CAAAL,EAAE,EAAe;EAAA,CAAE,EAC7CC,IAAI,IAAI;IAAEA,IAAI,EAAEA;EAAI,CAAE,EAC3B;IAAAK,QAAQ,EAAE,CAAC,CAAC;IACZC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAM;EAAE,GACtBN,IAAI;IACRH,GAAG,EAAEA;EAAG,IAEPb,OAAO,IAAID,mBAAmB,CAACC,OAAO,CAAC,CACjC;AAEb,CAAC;AAEDU,wBAAwB,CAACa,SAAS,GAAG;EACnCT,EAAE,EAAEU,SAAS,CAACC,MAAM;EACpBV,IAAI,EAAES,SAAS,CAACC,MAAM;EACtBzB,OAAO,EAAEwB,SAAS,CAACE,KAAK;EACxBlB,KAAK,EAAEgB,SAAS,CAACG,SAAS,CAAC,CACzBH,SAAS,CAACI,MAAM,EAChBJ,SAAS,CAACC,MAAM,EAChBD,SAAS,CAACK,OAAO,CAACL,SAAS,CAACC,MAAM,CAACK,UAAU,CAAC,CAC/C;CACF;AAEDpB,wBAAwB,CAACqB,WAAW,GAAG,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}