{"ast":null,"code":"import { __assign } from '../../packages/coreui-react-pro/node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nvar CVirtualScroller = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    visibleItems = _a.visibleItems,\n    onScroll = _a.onScroll;\n  var virtualScrollRef = useRef(null);\n  var virtualScrollContentRef = useRef(null);\n  var forkedRef = useForkedRef(ref, virtualScrollRef);\n  var _b = useState(Math.floor(visibleItems / 2)),\n    buffer = _b[0],\n    setBuffer = _b[1];\n  var _c = useState(1),\n    currentItemIndex = _c[0],\n    setCurrentItemIndex = _c[1];\n  var _d = useState(0),\n    itemHeight = _d[0],\n    setItemHeight = _d[1];\n  var _e = useState(React.Children.count(children)),\n    itemsNumber = _e[0],\n    setItemsNumber = _e[1];\n  var _f = useState(0),\n    viewportPadding = _f[0],\n    setViewportPadding = _f[1];\n  var _g = useState(visibleItems * itemHeight + 2 * viewportPadding),\n    viewportHeight = _g[0],\n    setViewportHeight = _g[1];\n  var _h = useState(itemsNumber * itemHeight + 2 * viewportPadding),\n    maxHeight = _h[0],\n    setMaxHeight = _h[1];\n  useEffect(function () {\n    virtualScrollRef.current && virtualScrollRef.current.scrollTop;\n    virtualScrollRef.current && setViewportPadding(Number.parseFloat(getComputedStyle(virtualScrollRef.current).paddingTop));\n  });\n  useEffect(function () {\n    setItemsNumber(React.Children.count(children));\n  }, [children]);\n  useEffect(function () {\n    setViewportHeight(Math.min(visibleItems, itemsNumber) * itemHeight + 2 * viewportPadding);\n  }, [itemHeight, itemsNumber, viewportPadding, visibleItems]);\n  useEffect(function () {\n    setMaxHeight(itemsNumber * itemHeight);\n    virtualScrollRef.current && virtualScrollRef.current.scrollTop;\n  }, [itemHeight, itemsNumber]);\n  useEffect(function () {\n    setBuffer(Math.floor(visibleItems / 2));\n  }, [visibleItems]);\n  var handleScroll = function (scrollTop) {\n    var _currentItemIndex = itemHeight && Math.max(Math.ceil(scrollTop / itemHeight), 1);\n    setCurrentItemIndex(_currentItemIndex);\n    onScroll && onScroll(_currentItemIndex);\n  };\n  return React.createElement(\"div\", {\n    className: classNames('virtual-scroller', className),\n    onScroll: function (event) {\n      return handleScroll(event.target.scrollTop);\n    },\n    ref: forkedRef,\n    style: {\n      height: viewportHeight,\n      overflowY: 'auto'\n    }\n  }, React.createElement(\"div\", {\n    className: \"virtual-scroller-content\",\n    style: {\n      height: maxHeight\n    },\n    ref: virtualScrollContentRef\n  }, React.Children.map(children, function (child, index) {\n    if (React.isValidElement(child) && index + 1 > Math.max(currentItemIndex - buffer, 0) && index + 1 <= currentItemIndex + visibleItems + buffer) {\n      return React.cloneElement(child, {\n        className: classNames(child.props.className, {\n          'virtual-scroller-item-preload': index + 1 > currentItemIndex + visibleItems || index + 1 < currentItemIndex\n        }),\n        key: index,\n        style: __assign({}, currentItemIndex > buffer && {\n          transform: \"translateY(\".concat((currentItemIndex - buffer) * itemHeight, \"px)\")\n        }),\n        ref: function (node) {\n          return node && node.offsetHeight && setItemHeight(node.offsetHeight + Number.parseFloat(getComputedStyle(node).marginTop) + Number.parseFloat(getComputedStyle(node).marginBottom));\n        }\n      });\n    }\n    return;\n  })));\n});\nCVirtualScroller.propTypes = {\n  onScroll: PropTypes.func,\n  visibleItems: PropTypes.number.isRequired\n};\nCVirtualScroller.displayName = 'CVirtualScroller';\nexport { CVirtualScroller };","map":{"version":3,"names":["CVirtualScroller","forwardRef","_a","ref","children","className","visibleItems","onScroll","virtualScrollRef","useRef","virtualScrollContentRef","forkedRef","useForkedRef","_b","useState","Math","floor","buffer","setBuffer","_c","currentItemIndex","setCurrentItemIndex","_d","itemHeight","setItemHeight","_e","React","Children","count","itemsNumber","setItemsNumber","_f","viewportPadding","setViewportPadding","_g","viewportHeight","setViewportHeight","_h","maxHeight","setMaxHeight","useEffect","current","scrollTop","Number","parseFloat","getComputedStyle","paddingTop","min","handleScroll","_currentItemIndex","max","ceil","createElement","classNames","event","target","style","height","overflowY","map","child","index","isValidElement","cloneElement","props","key","__assign","transform","concat","node","offsetHeight","marginTop","marginBottom","propTypes","PropTypes","func","number","isRequired","displayName"],"sources":["C:\\Users\\5m\\node_modules\\@coreui\\react-pro\\src\\components\\virtual-scroller\\CVirtualScroller.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, UIEvent, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { useForkedRef } from '../../hooks'\n\nexport interface CVirtualScrollerProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onScroll'> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Event fires when the component has been scrolled.\n   */\n  onScroll?: (currentItemIndex: number) => void\n  /**\n   * Amount of visible items\n   */\n  visibleItems: number\n}\n\nexport const CVirtualScroller = forwardRef<HTMLDivElement, CVirtualScrollerProps>(\n  ({ children, className, visibleItems, onScroll }, ref) => {\n    const virtualScrollRef = useRef<HTMLDivElement>(null)\n    const virtualScrollContentRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, virtualScrollRef)\n\n    const [buffer, setBuffer] = useState(Math.floor(visibleItems / 2))\n    const [currentItemIndex, setCurrentItemIndex] = useState(1)\n    const [itemHeight, setItemHeight] = useState(0)\n    const [itemsNumber, setItemsNumber] = useState(React.Children.count(children))\n    const [viewportPadding, setViewportPadding] = useState(0)\n    const [viewportHeight, setViewportHeight] = useState(\n      visibleItems * itemHeight + 2 * viewportPadding,\n    )\n    const [maxHeight, setMaxHeight] = useState(itemsNumber * itemHeight + 2 * viewportPadding)\n\n    useEffect(() => {\n      virtualScrollRef.current && virtualScrollRef.current.scrollTop\n\n      virtualScrollRef.current &&\n        setViewportPadding(Number.parseFloat(getComputedStyle(virtualScrollRef.current).paddingTop))\n    })\n\n    useEffect(() => {\n      setItemsNumber(React.Children.count(children))\n    }, [children])\n\n    useEffect(() => {\n      setViewportHeight(Math.min(visibleItems, itemsNumber) * itemHeight + 2 * viewportPadding)\n    }, [itemHeight, itemsNumber, viewportPadding, visibleItems])\n\n    useEffect(() => {\n      setMaxHeight(itemsNumber * itemHeight)\n      virtualScrollRef.current && virtualScrollRef.current.scrollTop\n    }, [itemHeight, itemsNumber])\n\n    useEffect(() => {\n      setBuffer(Math.floor(visibleItems / 2))\n    }, [visibleItems])\n\n    const handleScroll = (scrollTop: number) => {\n      const _currentItemIndex = itemHeight && Math.max(Math.ceil(scrollTop / itemHeight), 1)\n      setCurrentItemIndex(_currentItemIndex)\n      onScroll && onScroll(_currentItemIndex)\n    }\n\n    return (\n      <div\n        className={classNames('virtual-scroller', className)}\n        onScroll={(event: UIEvent<HTMLDivElement>) =>\n          handleScroll((event.target as HTMLDivElement).scrollTop)\n        }\n        ref={forkedRef}\n        style={{\n          height: viewportHeight,\n          overflowY: 'auto',\n        }}\n      >\n        <div\n          className=\"virtual-scroller-content\"\n          style={{\n            height: maxHeight,\n          }}\n          ref={virtualScrollContentRef}\n        >\n          {React.Children.map(children, (child, index) => {\n            if (\n              React.isValidElement(child) &&\n              index + 1 > Math.max(currentItemIndex - buffer, 0) &&\n              index + 1 <= currentItemIndex + visibleItems + buffer\n            ) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                className: classNames(child.props.className, {\n                  'virtual-scroller-item-preload':\n                    index + 1 > currentItemIndex + visibleItems || index + 1 < currentItemIndex,\n                }),\n                key: index,\n                style: {\n                  ...(currentItemIndex > buffer && {\n                    transform: `translateY(${(currentItemIndex - buffer) * itemHeight}px)`,\n                  }),\n                },\n                ref: (node: HTMLElement) =>\n                  node &&\n                  node.offsetHeight &&\n                  setItemHeight(\n                    node.offsetHeight +\n                      Number.parseFloat(getComputedStyle(node).marginTop) +\n                      Number.parseFloat(getComputedStyle(node).marginBottom),\n                  ),\n              })\n            }\n            return\n          })}\n        </div>\n      </div>\n    )\n  },\n)\n\nCVirtualScroller.propTypes = {\n  onScroll: PropTypes.func,\n  visibleItems: PropTypes.number.isRequired,\n}\n\nCVirtualScroller.displayName = 'CVirtualScroller'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}