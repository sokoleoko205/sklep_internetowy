{"ast":null,"code":"import { __rest, __assign } from '../../packages/coreui-react-pro/node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CButton } from '../button/CButton.js';\nimport { CSpinner } from '../spinner/CSpinner.js';\nvar CLoadingButton = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    disabledOnLoading = _a.disabledOnLoading,\n    loading = _a.loading,\n    onClick = _a.onClick,\n    _b = _a.spinnerType,\n    spinnerType = _b === void 0 ? 'border' : _b,\n    timeout = _a.timeout,\n    rest = __rest(_a, [\"children\", \"className\", \"disabledOnLoading\", \"loading\", \"onClick\", \"spinnerType\", \"timeout\"]);\n  var _c = useState(),\n    _loading = _c[0],\n    setLoading = _c[1];\n  useEffect(function () {\n    setLoading(loading);\n  }, [loading]);\n  var handleOnClick = function () {\n    onClick && onClick();\n    if (timeout) {\n      setLoading(true);\n      setTimeout(function () {\n        setLoading(false);\n      }, timeout);\n    }\n  };\n  return React.createElement(CButton, __assign({\n    className: classNames('btn-loading', _loading && 'is-loading', className)\n  }, disabledOnLoading && _loading && {\n    disabled: true\n  }, {\n    onClick: handleOnClick\n  }, rest, {\n    ref: ref\n  }), React.createElement(CSpinner, {\n    className: \"btn-loading-spinner\",\n    size: \"sm\",\n    variant: spinnerType\n  }), children);\n});\nCLoadingButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabledOnLoading: PropTypes.bool,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  spinnerType: PropTypes.oneOf(['border', 'grow']),\n  timeout: PropTypes.number\n};\nCLoadingButton.displayName = 'CLoadingButton';\nexport { CLoadingButton };","map":{"version":3,"names":["CLoadingButton","forwardRef","_a","ref","children","className","disabledOnLoading","loading","onClick","_b","spinnerType","timeout","rest","__rest","_c","useState","_loading","setLoading","useEffect","handleOnClick","setTimeout","React","createElement","CButton","__assign","classNames","disabled","CSpinner","size","variant","propTypes","PropTypes","node","string","bool","func","oneOf","number","displayName"],"sources":["C:\\Users\\5m\\node_modules\\@coreui\\react-pro\\src\\components\\loading-button\\CLoadingButton.tsx"],"sourcesContent":["import React, { useEffect, useState, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { CButton, CButtonProps } from './../button/CButton'\nimport { CSpinner } from './../spinner/CSpinner'\n\nexport interface CLoadingButtonProps extends CButtonProps {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Makes button disabled when loading.\n   */\n  disabledOnLoading?: boolean\n  /**\n   * Loading state (set to true to start animation).\n   */\n  loading?: boolean\n  /**\n   * @ignore\n   */\n  onClick?: () => void\n  /**\n   * Sets type of spinner.\n   */\n  spinnerType?: 'border' | 'grow'\n  /**\n   * Automatically starts loading animation and stops after a determined amount of milliseconds.\n   */\n  timeout?: number\n}\n\nexport const CLoadingButton = forwardRef<HTMLButtonElement, CLoadingButtonProps>(\n  (\n    {\n      children,\n      className,\n      disabledOnLoading,\n      loading,\n      onClick,\n      spinnerType = 'border',\n      timeout,\n      ...rest\n    },\n    ref,\n  ) => {\n    const [_loading, setLoading] = useState<boolean>()\n\n    useEffect(() => {\n      setLoading(loading)\n    }, [loading])\n\n    const handleOnClick = () => {\n      onClick && onClick()\n      if (timeout) {\n        setLoading(true)\n        setTimeout(() => {\n          setLoading(false)\n        }, timeout)\n      }\n    }\n\n    return (\n      <CButton\n        className={classNames('btn-loading', _loading && 'is-loading', className)}\n        {...(disabledOnLoading && _loading && { disabled: true })}\n        onClick={handleOnClick}\n        {...rest}\n        ref={ref}\n      >\n        <CSpinner className=\"btn-loading-spinner\" size=\"sm\" variant={spinnerType} />\n        {children}\n      </CButton>\n    )\n  },\n)\n\nCLoadingButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabledOnLoading: PropTypes.bool,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  spinnerType: PropTypes.oneOf(['border', 'grow']),\n  timeout: PropTypes.number,\n}\n\nCLoadingButton.displayName = 'CLoadingButton'\n"],"mappings":";;;;;;IAiCaA,cAAc,GAAGC,UAAU,CACtC,UACEC,EASC,EACDC,GAAG;EATD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IACTC,iBAAiB,GAAAJ,EAAA,CAAAI,iBAAA;IACjBC,OAAO,GAAAL,EAAA,CAAAK,OAAA;IACPC,OAAO,GAAAN,EAAA,CAAAM,OAAA;IACPC,EAAA,GAAAP,EAAA,CAAAQ,WAAsB;IAAtBA,WAAW,GAAGD,EAAA,sBAAQ,GAAAA,EAAA;IACtBE,OAAO,GAAAT,EAAA,CAAAS,OAAA;IACJC,IAAI,GARTC,MAAA,CAAAX,EAAA,gGASC,CADQ;EAIH,IAAAY,EAAA,GAAyBC,QAAQ,EAAW;IAA3CC,QAAQ,GAAAF,EAAA;IAAEG,UAAU,GAAAH,EAAA,GAAuB;EAElDI,SAAS,CAAC;IACRD,UAAU,CAACV,OAAO,CAAC;EACrB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,IAAMY,aAAa,GAAG,SAAAA,CAAA;IACpBX,OAAO,IAAIA,OAAO,EAAE;IACpB,IAAIG,OAAO,EAAE;MACXM,UAAU,CAAC,IAAI,CAAC;MAChBG,UAAU,CAAC;QACTH,UAAU,CAAC,KAAK,CAAC;OAClB,EAAEN,OAAO,CAAC;;EAEf,CAAC;EAED,OACEU,KAAC,CAAAC,aAAA,CAAAC,OAAO,EACNC,QAAA;IAAAnB,SAAS,EAAEoB,UAAU,CAAC,aAAa,EAAET,QAAQ,IAAI,YAAY,EAAEX,SAAS;EAAC,CACrE,EAACC,iBAAiB,IAAIU,QAAQ,IAAI;IAAEU,QAAQ,EAAE;EAAI,CAAE,EACxD;IAAAlB,OAAO,EAAEW;EAAa,GAClBP,IAAI,EACR;IAAAT,GAAG,EAAEA;EAAG,IAERkB,KAAA,CAAAC,aAAA,CAACK,QAAQ;IAACtB,SAAS,EAAC,qBAAqB;IAACuB,IAAI,EAAC,IAAI;IAACC,OAAO,EAAEnB;EAAW,CAAI,GAC3EN,QAAQ,CACD;AAEd,CAAC;AAGHJ,cAAc,CAAC8B,SAAS,GAAG;EACzB1B,QAAQ,EAAE2B,SAAS,CAACC,IAAI;EACxB3B,SAAS,EAAE0B,SAAS,CAACE,MAAM;EAC3B3B,iBAAiB,EAAEyB,SAAS,CAACG,IAAI;EACjC3B,OAAO,EAAEwB,SAAS,CAACG,IAAI;EACvB1B,OAAO,EAAEuB,SAAS,CAACI,IAAI;EACvBzB,WAAW,EAAEqB,SAAS,CAACK,KAAK,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;EAChDzB,OAAO,EAAEoB,SAAS,CAACM;CACpB;AAEDrC,cAAc,CAACsC,WAAW,GAAG,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}