{"ast":null,"code":"import { __rest, __spreadArray, __assign } from '../../packages/coreui-react-pro/node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef, useState, useMemo, useEffect } from 'react';\nimport classNames from '../../_virtual/index.js';\nimport PropTypes from 'prop-types';\nimport { CFormControlWrapper } from '../form/CFormControlWrapper.js';\nimport { CMultiSelectNativeSelect } from './CMultiSelectNativeSelect.js';\nimport { CMultiSelectOptions } from './CMultiSelectOptions.js';\nimport { CMultiSelectSelection } from './CMultiSelectSelection.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport { usePopper } from '../../hooks/usePopper.js';\nimport isRTL from '../../utils/isRTL.js';\nimport { flattenOptionsArray, filterOptionsList, createOption, selectOptions } from './utils.js';\nvar CMultiSelect = forwardRef(function (_a, ref) {\n  var _b;\n  var allowCreateOptions = _a.allowCreateOptions,\n    className = _a.className,\n    _c = _a.cleaner,\n    cleaner = _c === void 0 ? true : _c,\n    clearSearchOnSelect = _a.clearSearchOnSelect,\n    disabled = _a.disabled,\n    feedback = _a.feedback,\n    feedbackInvalid = _a.feedbackInvalid,\n    feedbackValid = _a.feedbackValid,\n    id = _a.id,\n    invalid = _a.invalid,\n    label = _a.label,\n    loading = _a.loading,\n    _d = _a.multiple,\n    multiple = _d === void 0 ? true : _d,\n    name = _a.name,\n    onChange = _a.onChange,\n    onFilterChange = _a.onFilterChange,\n    onHide = _a.onHide,\n    onShow = _a.onShow,\n    options = _a.options,\n    _e = _a.optionsMaxHeight,\n    optionsMaxHeight = _e === void 0 ? 'auto' : _e,\n    _f = _a.optionsStyle,\n    optionsStyle = _f === void 0 ? 'checkbox' : _f,\n    optionsTemplate = _a.optionsTemplate,\n    optionsGroupsTemplate = _a.optionsGroupsTemplate,\n    _g = _a.placeholder,\n    placeholder = _g === void 0 ? 'Select...' : _g,\n    required = _a.required,\n    _h = _a.resetSelectionOnOptionsChange,\n    resetSelectionOnOptionsChange = _h === void 0 ? false : _h,\n    _j = _a.search,\n    search = _j === void 0 ? true : _j,\n    _k = _a.searchNoResultsLabel,\n    searchNoResultsLabel = _k === void 0 ? 'No results found' : _k,\n    _l = _a.selectAll,\n    selectAll = _l === void 0 ? true : _l,\n    _m = _a.selectAllLabel,\n    selectAllLabel = _m === void 0 ? 'Select all options' : _m,\n    _o = _a.selectionType,\n    selectionType = _o === void 0 ? 'tags' : _o,\n    _p = _a.selectionTypeCounterText,\n    selectionTypeCounterText = _p === void 0 ? 'item(s) selected' : _p,\n    size = _a.size,\n    text = _a.text,\n    tooltipFeedback = _a.tooltipFeedback,\n    valid = _a.valid,\n    virtualScroller = _a.virtualScroller,\n    _q = _a.visible,\n    visible = _q === void 0 ? false : _q,\n    _r = _a.visibleItems,\n    visibleItems = _r === void 0 ? 10 : _r,\n    rest = __rest(_a, [\"allowCreateOptions\", \"className\", \"cleaner\", \"clearSearchOnSelect\", \"disabled\", \"feedback\", \"feedbackInvalid\", \"feedbackValid\", \"id\", \"invalid\", \"label\", \"loading\", \"multiple\", \"name\", \"onChange\", \"onFilterChange\", \"onHide\", \"onShow\", \"options\", \"optionsMaxHeight\", \"optionsStyle\", \"optionsTemplate\", \"optionsGroupsTemplate\", \"placeholder\", \"required\", \"resetSelectionOnOptionsChange\", \"search\", \"searchNoResultsLabel\", \"selectAll\", \"selectAllLabel\", \"selectionType\", \"selectionTypeCounterText\", \"size\", \"text\", \"tooltipFeedback\", \"valid\", \"virtualScroller\", \"visible\", \"visibleItems\"]);\n  var multiSelectRef = useRef(null);\n  var multiSelectForkedRef = useForkedRef(ref, multiSelectRef);\n  var dropdownRef = useRef(null);\n  var nativeSelectRef = useRef(null);\n  var togglerRef = useRef(null);\n  var searchRef = useRef(null);\n  var isInitialMount = useRef(true);\n  var _s = usePopper(),\n    popper = _s.popper,\n    initPopper = _s.initPopper,\n    destroyPopper = _s.destroyPopper;\n  var _t = useState(options),\n    _options = _t[0],\n    setOptions = _t[1];\n  var _u = useState(visible),\n    _visible = _u[0],\n    setVisible = _u[1];\n  var _v = useState(''),\n    searchValue = _v[0],\n    setSearchValue = _v[1];\n  var _w = useState([]),\n    selected = _w[0],\n    setSelected = _w[1];\n  var _x = useState([]),\n    userOptions = _x[0],\n    setUserOptions = _x[1];\n  var filteredOptions = useMemo(function () {\n    return flattenOptionsArray(search === 'external' ? __spreadArray(__spreadArray([], _options, true), filterOptionsList(searchValue, userOptions), true) : filterOptionsList(searchValue, __spreadArray(__spreadArray([], _options, true), userOptions, true)), true);\n  }, [_options, searchValue, userOptions]);\n  var flattenedOptions = useMemo(function () {\n    return flattenOptionsArray(options);\n  }, [JSON.stringify(options)]);\n  var userOption = useMemo(function () {\n    if (allowCreateOptions && filteredOptions.some(function (option) {\n      return option.label && option.label.toLowerCase() === searchValue.toLowerCase();\n    })) {\n      return false;\n    }\n    return searchRef.current && createOption(String(searchValue), flattenedOptions);\n  }, [filteredOptions, searchValue]);\n  var popperConfig = {\n    placement: isRTL(multiSelectRef.current) ? 'bottom-end' : 'bottom-start',\n    modifiers: [{\n      name: 'preventOverflow',\n      options: {\n        boundary: 'clippingParents'\n      }\n    }, {\n      name: 'offset',\n      options: {\n        offset: [0, 2]\n      }\n    }]\n  };\n  useEffect(function () {\n    setOptions(options);\n    if (resetSelectionOnOptionsChange) {\n      return setSelected([]);\n    }\n    var _selected = flattenedOptions.filter(function (option) {\n      return option.selected === true;\n    });\n    var deselected = flattenedOptions.filter(function (option) {\n      return option.selected === false;\n    });\n    _selected && setSelected(selectOptions(_selected, selected, deselected));\n  }, [JSON.stringify(options)]);\n  useEffect(function () {\n    !isInitialMount.current && onFilterChange && onFilterChange(searchValue);\n  }, [searchValue]);\n  useEffect(function () {\n    if (!isInitialMount.current && nativeSelectRef.current) {\n      nativeSelectRef.current.dispatchEvent(new Event('change', {\n        bubbles: true\n      }));\n    }\n    if (popper) {\n      popper.update();\n    }\n  }, [JSON.stringify(selected)]);\n  useEffect(function () {\n    if (_visible) {\n      onShow && onShow();\n      window.addEventListener('mouseup', handleMouseUp);\n      window.addEventListener('keyup', handleKeyUp);\n      togglerRef.current && dropdownRef.current && initPopper(togglerRef.current, dropdownRef.current, popperConfig);\n      searchRef.current && searchRef.current.focus();\n    }\n    return function () {\n      onHide && onHide();\n      setSearchValue('');\n      if (searchRef.current) {\n        searchRef.current.value = '';\n      }\n      window.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('keyup', handleKeyUp);\n      destroyPopper();\n    };\n  }, [_visible]);\n  useEffect(function () {\n    isInitialMount.current = false;\n  }, []);\n  var handleKeyUp = function (event) {\n    if (event.key === 'Escape') {\n      setVisible(false);\n    }\n  };\n  var handleMouseUp = function (event) {\n    if (multiSelectRef.current && multiSelectRef.current.contains(event.target)) {\n      return;\n    }\n    setVisible(false);\n  };\n  var handleSearchChange = function (event) {\n    var value = event.target.value;\n    setSearchValue(value);\n  };\n  var handleSearchKeyDown = function (event) {\n    if (event.key === 'Enter' && searchValue && allowCreateOptions) {\n      event.preventDefault();\n      if (userOption) {\n        setSelected(__spreadArray(__spreadArray([], selected, true), userOption, true));\n        setUserOptions(__spreadArray(__spreadArray([], userOptions, true), userOption, true));\n      }\n      if (!userOption) {\n        setSelected(__spreadArray(__spreadArray([], selected, true), [filteredOptions.find(function (option) {\n          return String(option.label).toLowerCase() === searchValue.toLowerCase();\n        })], false));\n      }\n      setSearchValue('');\n      if (searchRef.current) {\n        searchRef.current.value = '';\n      }\n      return;\n    }\n    if (searchValue.length > 0) {\n      return;\n    }\n    if (event.key === 'Backspace' || event.key === 'Delete') {\n      var last_1 = selected.filter(function (option) {\n        return !option.disabled;\n      }).pop();\n      last_1 && setSelected(selected.filter(function (option) {\n        return option.value !== last_1.value;\n      }));\n    }\n  };\n  var handleOptionOnClick = function (option) {\n    if (!multiple) {\n      setSelected([option]);\n      setVisible(false);\n      setSearchValue('');\n      if (searchRef.current) {\n        searchRef.current.value = '';\n      }\n      return;\n    }\n    if (option.custom && !userOptions.some(function (_option) {\n      return _option.value === option.value;\n    })) {\n      setUserOptions(__spreadArray(__spreadArray([], userOptions, true), [option], false));\n    }\n    if (clearSearchOnSelect || option.custom) {\n      setSearchValue('');\n      if (searchRef.current) {\n        searchRef.current.value = '';\n        searchRef.current.focus();\n      }\n    }\n    if (selected.some(function (_option) {\n      return _option.value === option.value;\n    })) {\n      setSelected(selected.filter(function (_option) {\n        return _option.value !== option.value;\n      }));\n    } else {\n      setSelected(__spreadArray(__spreadArray([], selected, true), [option], false));\n    }\n  };\n  var handleSelectAll = function () {\n    setSelected(selectOptions(__spreadArray(__spreadArray([], flattenedOptions.filter(function (option) {\n      return !option.disabled;\n    }), true), userOptions, true), selected));\n  };\n  var handleDeselectAll = function () {\n    setSelected(selected.filter(function (option) {\n      return option.disabled;\n    }));\n  };\n  return React.createElement(CFormControlWrapper, {\n    describedby: rest['aria-describedby'],\n    feedback: feedback,\n    feedbackInvalid: feedbackInvalid,\n    feedbackValid: feedbackValid,\n    id: id,\n    invalid: invalid,\n    label: label,\n    text: text,\n    tooltipFeedback: tooltipFeedback,\n    valid: valid\n  }, React.createElement(CMultiSelectNativeSelect, {\n    id: id,\n    multiple: multiple,\n    name: name,\n    options: selected,\n    required: required,\n    value: multiple ? selected.map(function (option) {\n      return option.value.toString();\n    }) : selected.map(function (option) {\n      return option.value;\n    })[0],\n    onChange: function () {\n      return onChange && onChange(selected);\n    },\n    ref: nativeSelectRef\n  }), React.createElement(\"div\", {\n    className: classNames('form-multi-select', (_b = {}, _b[\"form-multi-select-\".concat(size)] = size, _b.disabled = disabled, _b['is-invalid'] = invalid, _b['is-valid'] = valid, _b.show = _visible, _b), className),\n    \"aria-expanded\": _visible,\n    ref: multiSelectForkedRef\n  }, React.createElement(\"div\", {\n    className: \"form-multi-select-input-group\",\n    onClick: function () {\n      return !disabled && setVisible(true);\n    },\n    ref: togglerRef\n  }, React.createElement(CMultiSelectSelection, {\n    disabled: disabled,\n    multiple: multiple,\n    onRemove: function (option) {\n      return !disabled && handleOptionOnClick(option);\n    },\n    placeholder: placeholder,\n    search: search,\n    selected: selected,\n    selectionType: selectionType,\n    selectionTypeCounterText: selectionTypeCounterText\n  }, search && React.createElement(\"input\", __assign({\n    type: \"text\",\n    className: \"form-multi-select-search\",\n    disabled: disabled,\n    autoComplete: \"off\",\n    onChange: handleSearchChange,\n    onKeyDown: handleSearchKeyDown\n  }, selected.length === 0 && {\n    placeholder: placeholder\n  }, selected.length > 0 && selectionType === 'counter' && {\n    placeholder: \"\".concat(selected.length, \" \").concat(selectionTypeCounterText)\n  }, selected.length > 0 && !multiple && {\n    placeholder: selected.map(function (option) {\n      return option.label;\n    })[0]\n  }, multiple && selected.length > 0 && selectionType !== 'counter' && {\n    size: searchValue.length + 2\n  }, {\n    ref: searchRef\n  }))), React.createElement(\"div\", {\n    className: \"form-multi-select-buttons\"\n  }, !disabled && cleaner && selected.length > 0 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"form-multi-select-cleaner\",\n    onClick: function () {\n      return handleDeselectAll();\n    }\n  }), React.createElement(\"button\", __assign({\n    type: \"button\",\n    className: \"form-multi-select-indicator\",\n    onClick: function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (!disabled) {\n        setVisible(!_visible);\n      }\n    }\n  }, disabled && {\n    tabIndex: -1\n  })))), React.createElement(\"div\", {\n    className: \"form-multi-select-dropdown\",\n    role: \"menu\",\n    ref: dropdownRef\n  }, multiple && selectAll && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"form-multi-select-all\",\n    onClick: function () {\n      return handleSelectAll();\n    }\n  }, selectAllLabel), React.createElement(CMultiSelectOptions, {\n    handleOptionOnClick: function (option) {\n      return !disabled && handleOptionOnClick(option);\n    },\n    loading: loading,\n    options: filteredOptions.length === 0 && allowCreateOptions ? userOption || [] : filteredOptions,\n    optionsMaxHeight: optionsMaxHeight,\n    optionsStyle: optionsStyle,\n    optionsTemplate: optionsTemplate,\n    optionsGroupsTemplate: optionsGroupsTemplate,\n    searchNoResultsLabel: searchNoResultsLabel,\n    selected: selected,\n    virtualScroller: virtualScroller,\n    visibleItems: visibleItems\n  }))));\n});\nCMultiSelect.propTypes = __assign({\n  className: PropTypes.string,\n  cleaner: PropTypes.bool,\n  clearSearchOnSelect: PropTypes.bool,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  multiple: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onFilterChange: PropTypes.func,\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  options: PropTypes.array.isRequired,\n  optionsMaxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  optionsStyle: PropTypes.oneOf(['checkbox', 'text']),\n  optionsTemplate: PropTypes.func,\n  optionsGroupsTemplate: PropTypes.func,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  resetSelectionOnOptionsChange: PropTypes.bool,\n  search: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['external'])]),\n  searchNoResultsLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  selectAll: PropTypes.bool,\n  selectAllLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  selectionType: PropTypes.oneOf(['counter', 'tags', 'text']),\n  selectionTypeCounterText: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  virtualScroller: PropTypes.bool,\n  visible: PropTypes.bool,\n  visibleItems: PropTypes.number\n}, CFormControlWrapper.propTypes);\nCMultiSelect.displayName = 'CMultiSelect';\nexport { CMultiSelect };","map":{"version":3,"names":["CMultiSelect","forwardRef","_a","ref","allowCreateOptions","className","_c","cleaner","clearSearchOnSelect","disabled","feedback","feedbackInvalid","feedbackValid","id","invalid","label","loading","_d","multiple","name","onChange","onFilterChange","onHide","onShow","options","_e","optionsMaxHeight","_f","optionsStyle","optionsTemplate","optionsGroupsTemplate","_g","placeholder","required","_h","resetSelectionOnOptionsChange","_j","search","_k","searchNoResultsLabel","_l","selectAll","_m","selectAllLabel","_o","selectionType","_p","selectionTypeCounterText","size","text","tooltipFeedback","valid","virtualScroller","_q","visible","_r","visibleItems","rest","__rest","multiSelectRef","useRef","multiSelectForkedRef","useForkedRef","dropdownRef","nativeSelectRef","togglerRef","searchRef","isInitialMount","_s","usePopper","popper","initPopper","destroyPopper","_t","useState","_options","setOptions","_u","_visible","setVisible","_v","searchValue","setSearchValue","_w","selected","setSelected","_x","userOptions","setUserOptions","filteredOptions","useMemo","flattenOptionsArray","__spreadArray","filterOptionsList","flattenedOptions","JSON","stringify","userOption","some","option","toLowerCase","current","createOption","String","popperConfig","placement","isRTL","modifiers","boundary","offset","useEffect","_selected","filter","deselected","selectOptions","dispatchEvent","Event","bubbles","update","window","addEventListener","handleMouseUp","handleKeyUp","focus","value","removeEventListener","event","key","contains","target","handleSearchChange","handleSearchKeyDown","preventDefault","find","length","last_1","pop","handleOptionOnClick","custom","_option","handleSelectAll","handleDeselectAll","React","createElement","CFormControlWrapper","describedby","CMultiSelectNativeSelect","map","toString","classNames","_b","concat","show","onClick","CMultiSelectSelection","onRemove","__assign","type","autoComplete","onKeyDown","stopPropagation","tabIndex","role","CMultiSelectOptions","propTypes","PropTypes","string","bool","func","array","isRequired","oneOfType","number","oneOf","node","displayName"],"sources":["C:\\Users\\5m\\node_modules\\@coreui\\react-pro\\src\\components\\multi-select\\CMultiSelect.tsx"],"sourcesContent":["import React, {\n  FormEvent,\n  forwardRef,\n  HTMLAttributes,\n  ReactNode,\n  useEffect,\n  useState,\n  useRef,\n  useMemo,\n} from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport type { Placement } from '@popperjs/core'\n\nimport { CFormControlWrapper, CFormControlWrapperProps } from '../form/CFormControlWrapper'\n\nimport { CMultiSelectNativeSelect } from './CMultiSelectNativeSelect'\nimport { CMultiSelectOptions } from './CMultiSelectOptions'\nimport { CMultiSelectSelection } from './CMultiSelectSelection'\n\nimport { useForkedRef, usePopper } from '../../hooks'\nimport { isRTL } from '../../utils'\nimport { createOption, filterOptionsList, flattenOptionsArray, selectOptions } from './utils'\nimport type { Option, OptionsGroup, SelectedOption } from './types'\n\nexport interface CMultiSelectProps\n  extends Omit<CFormControlWrapperProps, 'floatingClassName' | 'floatingLabel'>,\n    Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  /**\n   * Allow users to create options if they are not in the list of options.\n   *\n   * @since 4.11.0\n   */\n  allowCreateOptions?: boolean\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Enables selection cleaner element.\n   */\n  cleaner?: boolean\n  /**\n   * Clear current search on selecting an item.\n   *\n   * @since 4.11.0\n   */\n  clearSearchOnSelect?: boolean\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Set the id attribute for the native select element.\n   *\n   * **[Deprecated since v5.3.0]** The name attribute for the native select element is generated based on the `id` property:\n   * - `<select name=\"\\{id\\}-multi-select\" />`\n   */\n  id?: string\n  /**\n   * When set, the options list will have a loading style: loading spinner and reduced opacity.\n   *\n   * @since 4.11.0\n   */\n  loading?: boolean\n  /**\n   * It specifies that multiple options can be selected at once.\n   */\n  multiple?: boolean\n  /**\n   * The name attribute for the select element.\n   *\n   * @since 5.3.0\n   */\n  name?: string\n  /**\n   * Execute a function when a user changes the selected option.\n   */\n  onChange?: (selected: Option[]) => void\n  /**\n   * Execute a function when the filter value changed.\n   *\n   * @since 4.8.0\n   */\n  onFilterChange?: (value: string) => void\n  /**\n   * The callback is fired when the Multi Select component requests to be hidden.\n   */\n  onHide?: () => void\n  /**\n   * The callback is fired when the Multi Select component requests to be shown.\n   */\n  onShow?: () => void\n  /**\n   * List of option elements.\n   */\n  options: (Option | OptionsGroup)[]\n  /**\n   * Sets maxHeight of options list.\n   */\n  optionsMaxHeight?: number | string\n  /**\n   * Sets option style.\n   */\n  optionsStyle?: 'checkbox' | 'text'\n  /**\n   * Custom template for options.\n   *\n   * @since 4.12.0\n   */\n  optionsTemplate?: (option: Option) => ReactNode\n  /**\n   * Custom template for options groups.\n   *\n   * @since 4.12.0\n   */\n  optionsGroupsTemplate?: (option: OptionsGroup) => ReactNode\n  /**\n   * Specifies a short hint that is visible in the search input.\n   */\n  placeholder?: string\n  /**\n   * When it is present, it indicates that the user must choose a value before submitting the form.\n   */\n  required?: boolean\n  /**\n   * Determines whether the selected options should be cleared when the options list is updated. When set to true, any previously selected options will be reset whenever the options list undergoes a change. This ensures that outdated selections are not retained when new options are provided.\n   *\n   * @since 5.3.0\n   */\n  resetSelectionOnOptionsChange?: boolean\n  /**\n   * Enables search input element.\n   */\n  search?: boolean | 'external'\n  /**\n   * Sets the label for no results when filtering.\n   */\n  searchNoResultsLabel?: string | ReactNode\n  /**\n   * Enables select all button.\n   */\n  selectAll?: boolean\n  /**\n   * Sets the select all button label.\n   */\n  selectAllLabel?: string | ReactNode\n  /**\n   * Sets the selection style.\n   */\n  selectionType?: 'counter' | 'tags' | 'text'\n  /**\n   * Sets the counter selection label.\n   */\n  selectionTypeCounterText?: string\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Enable virtual scroller for the options list.\n   *\n   * @since 4.8.0\n   */\n  virtualScroller?: boolean\n  /**\n   * Toggle the visibility of multi select dropdown.\n   */\n  visible?: boolean\n  /**\n   * Amount of visible items when virtualScroller is set to `true`.\n   *\n   * @since 4.8.0\n   */\n  visibleItems?: number\n}\n\nexport const CMultiSelect = forwardRef<HTMLDivElement, CMultiSelectProps>(\n  (\n    {\n      allowCreateOptions,\n      className,\n      cleaner = true,\n      clearSearchOnSelect,\n      disabled,\n      feedback,\n      feedbackInvalid,\n      feedbackValid,\n      id,\n      invalid,\n      label,\n      loading,\n      multiple = true,\n      name,\n      onChange,\n      onFilterChange,\n      onHide,\n      onShow,\n      options,\n      optionsMaxHeight = 'auto',\n      optionsStyle = 'checkbox',\n      optionsTemplate,\n      optionsGroupsTemplate,\n      placeholder = 'Select...',\n      required,\n      resetSelectionOnOptionsChange = false,\n      search = true,\n      searchNoResultsLabel = 'No results found',\n      selectAll = true,\n      selectAllLabel = 'Select all options',\n      selectionType = 'tags',\n      selectionTypeCounterText = 'item(s) selected',\n      size,\n      text,\n      tooltipFeedback,\n      valid,\n      virtualScroller,\n      visible = false,\n      visibleItems = 10,\n      ...rest\n    },\n    ref,\n  ) => {\n    const multiSelectRef = useRef<HTMLDivElement>(null)\n    const multiSelectForkedRef = useForkedRef(ref, multiSelectRef)\n\n    const dropdownRef = useRef<HTMLDivElement>(null)\n    const nativeSelectRef = useRef<HTMLSelectElement>(null)\n    const togglerRef = useRef<HTMLDivElement>(null)\n    const searchRef = useRef<HTMLInputElement>(null)\n    const isInitialMount = useRef(true)\n\n    const { popper, initPopper, destroyPopper } = usePopper()\n\n    const [_options, setOptions] = useState<(Option | OptionsGroup)[]>(options)\n    const [_visible, setVisible] = useState(visible)\n    const [searchValue, setSearchValue] = useState('')\n    const [selected, setSelected] = useState<SelectedOption[]>([])\n    const [userOptions, setUserOptions] = useState<Option[]>([])\n\n    const filteredOptions = useMemo(\n      () =>\n        flattenOptionsArray(\n          search === 'external'\n            ? [..._options, ...filterOptionsList(searchValue, userOptions)]\n            : filterOptionsList(searchValue, [..._options, ...userOptions]),\n          true,\n        ),\n      [_options, searchValue, userOptions],\n    )\n\n    const flattenedOptions = useMemo(() => flattenOptionsArray(options), [JSON.stringify(options)])\n\n    const userOption = useMemo(() => {\n      if (\n        allowCreateOptions &&\n        filteredOptions.some(\n          (option) => option.label && option.label.toLowerCase() === searchValue.toLowerCase(),\n        )\n      ) {\n        return false\n      }\n\n      return searchRef.current && createOption(String(searchValue), flattenedOptions)\n    }, [filteredOptions, searchValue])\n\n    const popperConfig = {\n      placement: (isRTL(multiSelectRef.current) ? 'bottom-end' : 'bottom-start') as Placement,\n      modifiers: [\n        {\n          name: 'preventOverflow',\n          options: {\n            boundary: 'clippingParents',\n          },\n        },\n        {\n          name: 'offset',\n          options: {\n            offset: [0, 2],\n          },\n        },\n      ],\n    }\n\n    useEffect(() => {\n      setOptions(options)\n\n      if (resetSelectionOnOptionsChange) {\n        return setSelected([])\n      }\n\n      const _selected = flattenedOptions.filter((option: Option) => option.selected === true)\n      const deselected = flattenedOptions.filter(\n        (option: Option) => option.selected === false,\n      ) as Option[]\n\n      _selected && setSelected(selectOptions(_selected, selected, deselected))\n    }, [JSON.stringify(options)])\n\n    useEffect(() => {\n      !isInitialMount.current && onFilterChange && onFilterChange(searchValue)\n    }, [searchValue])\n\n    useEffect(() => {\n      if (!isInitialMount.current && nativeSelectRef.current) {\n        nativeSelectRef.current.dispatchEvent(new Event('change', { bubbles: true }))\n      }\n\n      if (popper) {\n        popper.update()\n      }\n    }, [JSON.stringify(selected)])\n\n    useEffect(() => {\n      if (_visible) {\n        onShow && onShow()\n\n        window.addEventListener('mouseup', handleMouseUp)\n        window.addEventListener('keyup', handleKeyUp)\n\n        togglerRef.current &&\n          dropdownRef.current &&\n          initPopper(togglerRef.current, dropdownRef.current, popperConfig)\n        searchRef.current && searchRef.current.focus()\n      }\n\n      return () => {\n        onHide && onHide()\n\n        setSearchValue('')\n        if (searchRef.current) {\n          searchRef.current.value = ''\n        }\n\n        window.removeEventListener('mouseup', handleMouseUp)\n        window.removeEventListener('keyup', handleKeyUp)\n\n        destroyPopper()\n      }\n    }, [_visible])\n\n    useEffect(() => {\n      isInitialMount.current = false\n    }, [])\n\n    const handleKeyUp = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setVisible(false)\n      }\n    }\n\n    const handleMouseUp = (event: Event) => {\n      if (multiSelectRef.current && multiSelectRef.current.contains(event.target as HTMLElement)) {\n        return\n      }\n\n      setVisible(false)\n    }\n\n    const handleSearchChange = (event: FormEvent<HTMLInputElement>) => {\n      const value = (event.target as HTMLInputElement).value\n      setSearchValue(value)\n    }\n\n    const handleSearchKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter' && searchValue && allowCreateOptions) {\n        event.preventDefault()\n\n        if (userOption) {\n          setSelected([...selected, ...userOption])\n          setUserOptions([...userOptions, ...userOption])\n        }\n\n        if (!userOption) {\n          setSelected([\n            ...selected,\n            filteredOptions.find(\n              (option) => String(option.label).toLowerCase() === searchValue.toLowerCase(),\n            ) as Option,\n          ])\n        }\n\n        setSearchValue('')\n        if (searchRef.current) {\n          searchRef.current.value = ''\n        }\n\n        return\n      }\n\n      if (searchValue.length > 0) {\n        return\n      }\n\n      if (event.key === 'Backspace' || event.key === 'Delete') {\n        const last = selected.filter((option: Option) => !option.disabled).pop()\n        last && setSelected(selected.filter((option: Option) => option.value !== last.value))\n      }\n    }\n\n    const handleOptionOnClick = (option: Option) => {\n      if (!multiple) {\n        setSelected([option] as SelectedOption[])\n        setVisible(false)\n        setSearchValue('')\n        if (searchRef.current) {\n          searchRef.current.value = ''\n        }\n\n        return\n      }\n\n      if (option.custom && !userOptions.some((_option) => _option.value === option.value)) {\n        setUserOptions([...userOptions, option])\n      }\n\n      if (clearSearchOnSelect || option.custom) {\n        setSearchValue('')\n        if (searchRef.current) {\n          searchRef.current.value = ''\n          searchRef.current.focus()\n        }\n      }\n\n      if (selected.some((_option) => _option.value === option.value)) {\n        setSelected(selected.filter((_option) => _option.value !== option.value))\n      } else {\n        setSelected([...selected, option] as SelectedOption[])\n      }\n    }\n\n    const handleSelectAll = () => {\n      setSelected(\n        selectOptions(\n          [...flattenedOptions.filter((option: Option) => !option.disabled), ...userOptions],\n          selected,\n        ),\n      )\n    }\n\n    const handleDeselectAll = () => {\n      setSelected(selected.filter((option) => option.disabled))\n    }\n\n    return (\n      <CFormControlWrapper\n        describedby={rest['aria-describedby']}\n        feedback={feedback}\n        feedbackInvalid={feedbackInvalid}\n        feedbackValid={feedbackValid}\n        id={id}\n        invalid={invalid}\n        label={label}\n        text={text}\n        tooltipFeedback={tooltipFeedback}\n        valid={valid}\n      >\n        <CMultiSelectNativeSelect\n          id={id}\n          multiple={multiple}\n          name={name}\n          options={selected}\n          required={required}\n          value={\n            multiple\n              ? selected.map((option: SelectedOption) => option.value.toString())\n              : selected.map((option: SelectedOption) => option.value)[0]\n          }\n          onChange={() => onChange && onChange(selected)}\n          ref={nativeSelectRef}\n        />\n        <div\n          className={classNames(\n            'form-multi-select',\n            {\n              [`form-multi-select-${size}`]: size,\n              disabled,\n              'is-invalid': invalid,\n              'is-valid': valid,\n              show: _visible,\n            },\n            className,\n          )}\n          aria-expanded={_visible}\n          ref={multiSelectForkedRef}\n        >\n          <div\n            className=\"form-multi-select-input-group\"\n            onClick={() => !disabled && setVisible(true)}\n            ref={togglerRef}\n          >\n            <CMultiSelectSelection\n              disabled={disabled}\n              multiple={multiple}\n              onRemove={(option) => !disabled && handleOptionOnClick(option)}\n              placeholder={placeholder}\n              search={search}\n              selected={selected}\n              selectionType={selectionType}\n              selectionTypeCounterText={selectionTypeCounterText}\n            >\n              {search && (\n                <input\n                  type=\"text\"\n                  className=\"form-multi-select-search\"\n                  disabled={disabled}\n                  autoComplete=\"off\"\n                  onChange={handleSearchChange}\n                  onKeyDown={handleSearchKeyDown}\n                  {...(selected.length === 0 && { placeholder: placeholder })}\n                  {...(selected.length > 0 &&\n                    selectionType === 'counter' && {\n                      placeholder: `${selected.length} ${selectionTypeCounterText}`,\n                    })}\n                  {...(selected.length > 0 &&\n                    !multiple && { placeholder: selected.map((option) => option.label)[0] })}\n                  {...(multiple &&\n                    selected.length > 0 &&\n                    selectionType !== 'counter' && { size: searchValue.length + 2 })}\n                  ref={searchRef}\n                ></input>\n              )}\n            </CMultiSelectSelection>\n            <div className=\"form-multi-select-buttons\">\n              {!disabled && cleaner && selected.length > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"form-multi-select-cleaner\"\n                  onClick={() => handleDeselectAll()}\n                ></button>\n              )}\n              <button\n                type=\"button\"\n                className=\"form-multi-select-indicator\"\n                onClick={(event) => {\n                  event.preventDefault()\n                  event.stopPropagation()\n\n                  if (!disabled) {\n                    setVisible(!_visible)\n                  }\n                }}\n                {...(disabled && { tabIndex: -1 })}\n              ></button>\n            </div>\n          </div>\n          <div className=\"form-multi-select-dropdown\" role=\"menu\" ref={dropdownRef}>\n            {multiple && selectAll && (\n              <button\n                type=\"button\"\n                className=\"form-multi-select-all\"\n                onClick={() => handleSelectAll()}\n              >\n                {selectAllLabel}\n              </button>\n            )}\n            <CMultiSelectOptions\n              handleOptionOnClick={(option) => !disabled && handleOptionOnClick(option)}\n              loading={loading}\n              options={\n                filteredOptions.length === 0 && allowCreateOptions\n                  ? userOption || []\n                  : filteredOptions\n              }\n              optionsMaxHeight={optionsMaxHeight}\n              optionsStyle={optionsStyle}\n              optionsTemplate={optionsTemplate}\n              optionsGroupsTemplate={optionsGroupsTemplate}\n              searchNoResultsLabel={searchNoResultsLabel}\n              selected={selected}\n              virtualScroller={virtualScroller}\n              visibleItems={visibleItems}\n            />\n          </div>\n        </div>\n      </CFormControlWrapper>\n    )\n  },\n)\n\nCMultiSelect.propTypes = {\n  className: PropTypes.string,\n  cleaner: PropTypes.bool,\n  clearSearchOnSelect: PropTypes.bool,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  multiple: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onFilterChange: PropTypes.func,\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  options: PropTypes.array.isRequired,\n  optionsMaxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  optionsStyle: PropTypes.oneOf(['checkbox', 'text']),\n  optionsTemplate: PropTypes.func,\n  optionsGroupsTemplate: PropTypes.func,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  resetSelectionOnOptionsChange: PropTypes.bool,\n  search: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'external'>(['external'])]),\n  searchNoResultsLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  selectAll: PropTypes.bool,\n  selectAllLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  selectionType: PropTypes.oneOf(['counter', 'tags', 'text']),\n  selectionTypeCounterText: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  virtualScroller: PropTypes.bool,\n  visible: PropTypes.bool,\n  visibleItems: PropTypes.number,\n  ...CFormControlWrapper.propTypes,\n}\n\nCMultiSelect.displayName = 'CMultiSelect'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}