{"ast":null,"code":"import { __assign } from '../../packages/coreui-react-pro/node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CElementCover } from '../element-cover/CElementCover.js';\nimport { CVirtualScroller } from '../virtual-scroller/CVirtualScroller.js';\nimport { getNextSibling, getPreviousSibling } from './utils.js';\nvar CMultiSelectOptions = forwardRef(function (_a, ref) {\n  var handleOptionOnClick = _a.handleOptionOnClick,\n    loading = _a.loading,\n    options = _a.options,\n    optionsMaxHeight = _a.optionsMaxHeight,\n    optionsStyle = _a.optionsStyle,\n    optionsTemplate = _a.optionsTemplate,\n    optionsGroupsTemplate = _a.optionsGroupsTemplate,\n    searchNoResultsLabel = _a.searchNoResultsLabel,\n    selected = _a.selected,\n    virtualScroller = _a.virtualScroller,\n    _b = _a.visibleItems,\n    visibleItems = _b === void 0 ? 10 : _b;\n  var handleKeyDown = function (event, option) {\n    if (event.code === 'Space' || event.key === 'Enter') {\n      event.preventDefault();\n      handleOptionOnClick && handleOptionOnClick(option);\n    }\n    if (event.key === 'Down' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      var target = event.target;\n      var next = getNextSibling(target, '.form-multi-select-option');\n      next && next.focus();\n    }\n    if (event.key === 'Up' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      var target = event.target;\n      var prev = getPreviousSibling(target, '.form-multi-select-option');\n      prev && prev.focus();\n    }\n  };\n  var createOptions = function (options) {\n    return options.length > 0 ? options.map(function (option, index) {\n      return 'value' in option ? React.createElement(\"div\", {\n        className: classNames('form-multi-select-option', {\n          'form-multi-select-option-with-checkbox': optionsStyle === 'checkbox',\n          'form-multi-selected': selected.some(function (_option) {\n            return _option.value === option.value;\n          }),\n          disabled: option.disabled\n        }),\n        key: index,\n        onClick: function () {\n          return handleOptionOnClick && handleOptionOnClick(option);\n        },\n        onKeyDown: function (event) {\n          return handleKeyDown(event, option);\n        },\n        tabIndex: 0\n      }, optionsTemplate ? optionsTemplate(option) : option.label) : React.createElement(\"div\", {\n        className: \"form-multi-select-optgroup-label\",\n        key: index\n      }, optionsGroupsTemplate ? optionsGroupsTemplate(option) : option.label);\n    }) : React.createElement(\"div\", {\n      className: \"form-multi-select-options-empty\"\n    }, searchNoResultsLabel);\n  };\n  return React.createElement(React.Fragment, null, virtualScroller ? React.createElement(CVirtualScroller, {\n    className: \"form-multi-select-options\",\n    visibleItems: visibleItems,\n    ref: ref\n  }, createOptions(options)) : React.createElement(\"div\", __assign({\n    className: \"form-multi-select-options\"\n  }, optionsMaxHeight !== 'auto' && {\n    style: {\n      maxHeight: optionsMaxHeight,\n      overflow: 'scroll'\n    }\n  }, {\n    ref: ref\n  }), createOptions(options)), loading && React.createElement(CElementCover, null));\n});\nCMultiSelectOptions.propTypes = {\n  handleOptionOnClick: PropTypes.func,\n  loading: PropTypes.bool,\n  options: PropTypes.array.isRequired,\n  optionsMaxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  optionsStyle: PropTypes.oneOf(['checkbox', 'text']),\n  optionsTemplate: PropTypes.func,\n  optionsGroupsTemplate: PropTypes.func,\n  searchNoResultsLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  virtualScroller: PropTypes.bool,\n  visibleItems: PropTypes.number\n};\nCMultiSelectOptions.displayName = 'CMultiSelectOptions';\nexport { CMultiSelectOptions };","map":{"version":3,"names":["CMultiSelectOptions","forwardRef","_a","ref","handleOptionOnClick","loading","options","optionsMaxHeight","optionsStyle","optionsTemplate","optionsGroupsTemplate","searchNoResultsLabel","selected","virtualScroller","_b","visibleItems","handleKeyDown","event","option","code","key","preventDefault","target","next","getNextSibling","focus","prev","getPreviousSibling","createOptions","length","map","index","React","createElement","className","classNames","some","_option","value","disabled","onClick","onKeyDown","tabIndex","label","Fragment","CVirtualScroller","__assign","style","maxHeight","overflow","CElementCover","propTypes","PropTypes","func","bool","array","isRequired","oneOfType","number","string","oneOf","node","displayName"],"sources":["C:\\Users\\5m\\node_modules\\@coreui\\react-pro\\src\\components\\multi-select\\CMultiSelectOptions.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CElementCover } from '../element-cover'\nimport { CVirtualScroller } from '../virtual-scroller'\n\nimport { getNextSibling, getPreviousSibling } from './utils'\nimport type { Option, OptionsGroup } from './types'\n\nexport interface CMultiSelectOptionsProps extends HTMLAttributes<HTMLDivElement> {\n  handleOptionOnClick?: (option: Option) => void\n  loading?: boolean\n  options: (Option | OptionsGroup)[]\n  optionsMaxHeight?: number | string\n  optionsStyle?: 'checkbox' | 'text'\n  optionsTemplate?: (option: Option) => ReactNode\n  optionsGroupsTemplate?: (option: OptionsGroup) => ReactNode\n  searchNoResultsLabel?: string | ReactNode\n  selected: Option[]\n  virtualScroller?: boolean\n  visibleItems?: number\n}\n\nexport const CMultiSelectOptions = forwardRef<HTMLDivElement, CMultiSelectOptionsProps>(\n  (\n    {\n      handleOptionOnClick,\n      loading,\n      options,\n      optionsMaxHeight,\n      optionsStyle,\n      optionsTemplate,\n      optionsGroupsTemplate,\n      searchNoResultsLabel,\n      selected,\n      virtualScroller,\n      visibleItems = 10,\n    },\n    ref,\n  ) => {\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>, option: Option) => {\n      if (event.code === 'Space' || event.key === 'Enter') {\n        event.preventDefault()\n        handleOptionOnClick && handleOptionOnClick(option)\n      }\n\n      if (event.key === 'Down' || event.key === 'ArrowDown') {\n        event.preventDefault()\n        const target = event.target as HTMLElement\n        const next = getNextSibling(target, '.form-multi-select-option')\n\n        next && (next as HTMLElement).focus()\n      }\n\n      if (event.key === 'Up' || event.key === 'ArrowUp') {\n        event.preventDefault()\n        const target = event.target as HTMLElement\n        const prev = getPreviousSibling(target, '.form-multi-select-option')\n\n        prev && (prev as HTMLElement).focus()\n      }\n    }\n\n    const createOptions = (options: (Option | OptionsGroup)[]): JSX.Element | JSX.Element[] =>\n      options.length > 0 ? (\n        options.map((option: Option | OptionsGroup, index: number) =>\n          'value' in option ? (\n            <div\n              className={classNames('form-multi-select-option', {\n                'form-multi-select-option-with-checkbox': optionsStyle === 'checkbox',\n                'form-multi-selected': selected.some((_option) => _option.value === option.value),\n                disabled: option.disabled,\n              })}\n              key={index}\n              onClick={() => handleOptionOnClick && handleOptionOnClick(option as Option)}\n              onKeyDown={(event) => handleKeyDown(event, option as Option)}\n              tabIndex={0}\n            >\n              {optionsTemplate ? optionsTemplate(option as Option) : option.label}\n            </div>\n          ) : (\n            <div className=\"form-multi-select-optgroup-label\" key={index}>\n              {optionsGroupsTemplate ? optionsGroupsTemplate(option as OptionsGroup) : option.label}\n            </div>\n          ),\n        )\n      ) : (\n        <div className=\"form-multi-select-options-empty\">{searchNoResultsLabel}</div>\n      )\n\n    return (\n      <>\n        {virtualScroller ? (\n          <CVirtualScroller\n            className=\"form-multi-select-options\"\n            visibleItems={visibleItems}\n            ref={ref}\n          >\n            {createOptions(options)}\n          </CVirtualScroller>\n        ) : (\n          <div\n            className=\"form-multi-select-options\"\n            {...(optionsMaxHeight !== 'auto' && {\n              style: { maxHeight: optionsMaxHeight, overflow: 'scroll' },\n            })}\n            ref={ref}\n          >\n            {createOptions(options)}\n          </div>\n        )}\n        {loading && <CElementCover />}\n      </>\n    )\n  },\n)\n\nCMultiSelectOptions.propTypes = {\n  handleOptionOnClick: PropTypes.func,\n  loading: PropTypes.bool,\n  options: PropTypes.array.isRequired,\n  optionsMaxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  optionsStyle: PropTypes.oneOf(['checkbox', 'text']),\n  optionsTemplate: PropTypes.func,\n  optionsGroupsTemplate: PropTypes.func,\n  searchNoResultsLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  virtualScroller: PropTypes.bool,\n  visibleItems: PropTypes.number,\n}\n\nCMultiSelectOptions.displayName = 'CMultiSelectOptions'\n"],"mappings":";;;;;;;IAwBaA,mBAAmB,GAAGC,UAAU,CAC3C,UACEC,EAYC,EACDC,GAAG;EAZD,IAAAC,mBAAmB,GAAAF,EAAA,CAAAE,mBAAA;IACnBC,OAAO,GAAAH,EAAA,CAAAG,OAAA;IACPC,OAAO,GAAAJ,EAAA,CAAAI,OAAA;IACPC,gBAAgB,GAAAL,EAAA,CAAAK,gBAAA;IAChBC,YAAY,GAAAN,EAAA,CAAAM,YAAA;IACZC,eAAe,GAAAP,EAAA,CAAAO,eAAA;IACfC,qBAAqB,GAAAR,EAAA,CAAAQ,qBAAA;IACrBC,oBAAoB,GAAAT,EAAA,CAAAS,oBAAA;IACpBC,QAAQ,GAAAV,EAAA,CAAAU,QAAA;IACRC,eAAe,GAAAX,EAAA,CAAAW,eAAA;IACfC,EAAiB,GAAAZ,EAAA,CAAAa,YAAA;IAAjBA,YAAY,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;EAInB,IAAME,aAAa,GAAG,SAAAA,CAACC,KAA0C,EAAEC,MAAc;IAC/E,IAAID,KAAK,CAACE,IAAI,KAAK,OAAO,IAAIF,KAAK,CAACG,GAAG,KAAK,OAAO,EAAE;MACnDH,KAAK,CAACI,cAAc,EAAE;MACtBjB,mBAAmB,IAAIA,mBAAmB,CAACc,MAAM,CAAC;;IAGpD,IAAID,KAAK,CAACG,GAAG,KAAK,MAAM,IAAIH,KAAK,CAACG,GAAG,KAAK,WAAW,EAAE;MACrDH,KAAK,CAACI,cAAc,EAAE;MACtB,IAAMC,MAAM,GAAGL,KAAK,CAACK,MAAqB;MAC1C,IAAMC,IAAI,GAAGC,cAAc,CAACF,MAAM,EAAE,2BAA2B,CAAC;MAEhEC,IAAI,IAAKA,IAAoB,CAACE,KAAK,EAAE;;IAGvC,IAAIR,KAAK,CAACG,GAAG,KAAK,IAAI,IAAIH,KAAK,CAACG,GAAG,KAAK,SAAS,EAAE;MACjDH,KAAK,CAACI,cAAc,EAAE;MACtB,IAAMC,MAAM,GAAGL,KAAK,CAACK,MAAqB;MAC1C,IAAMI,IAAI,GAAGC,kBAAkB,CAACL,MAAM,EAAE,2BAA2B,CAAC;MAEpEI,IAAI,IAAKA,IAAoB,CAACD,KAAK,EAAE;;EAEzC,CAAC;EAED,IAAMG,aAAa,GAAG,SAAAA,CAACtB,OAAkC;IACvD,OAAAA,OAAO,CAACuB,MAAM,GAAG,CAAC,GAChBvB,OAAO,CAACwB,GAAG,CAAC,UAACZ,MAA6B,EAAEa,KAAa;MACvD,cAAO,IAAIb,MAAM,GACfc,KAAA,CAAAC,aAAA;QACEC,SAAS,EAAEC,UAAU,CAAC,0BAA0B,EAAE;UAChD,wCAAwC,EAAE3B,YAAY,KAAK,UAAU;UACrE,qBAAqB,EAAEI,QAAQ,CAACwB,IAAI,CAAC,UAACC,OAAO,EAAK;YAAA,OAAAA,OAAO,CAACC,KAAK,KAAKpB,MAAM,CAACoB,KAAK;UAAA,EAAC;UACjFC,QAAQ,EAAErB,MAAM,CAACqB;QAClB,EAAC;QACFnB,GAAG,EAAEW,KAAK;QACVS,OAAO,EAAE,SAAAA,CAAA;UAAM,OAAApC,mBAAmB,IAAIA,mBAAmB,CAACc,MAAgB,CAAC;QAAA;QAC3EuB,SAAS,EAAE,SAAAA,CAACxB,KAAK,EAAK;UAAA,OAAAD,aAAa,CAACC,KAAK,EAAEC,MAAgB,CAAC;QAAA;QAC5DwB,QAAQ,EAAE;MAAC,GAEVjC,eAAe,GAAGA,eAAe,CAACS,MAAgB,CAAC,GAAGA,MAAM,CAACyB,KAAK,CAC/D,GAENX,KAAA,CAAAC,aAAA;QAAKC,SAAS,EAAC,kCAAkC;QAACd,GAAG,EAAEW;MAAK,GACzDrB,qBAAqB,GAAGA,qBAAqB,CAACQ,MAAsB,CAAC,GAAGA,MAAM,CAACyB,KAAK,CAExF;IAlBD,CAkBC,CACF,GAEDX,KAAK,CAAAC,aAAA;MAAAC,SAAS,EAAC;IAAiC,CAAE,EAAAvB,oBAAoB,CACvE;EAxBD,CAwBC;EAEH,OACEqB,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAY,QAAA,QACG/B,eAAe,GACdmB,KAAA,CAAAC,aAAA,CAACY,gBAAgB,EACf;IAAAX,SAAS,EAAC,2BAA2B;IACrCnB,YAAY,EAAEA,YAAY;IAC1BZ,GAAG,EAAEA;EAAG,GAEPyB,aAAa,CAACtB,OAAO,CAAC,CACN,GAEnB0B,KACE,CAAAC,aAAA,QAAAa,QAAA;IAAAZ,SAAS,EAAC;EAA2B,GAChC3B,gBAAgB,KAAK,MAAM,IAAI;IAClCwC,KAAK,EAAE;MAAEC,SAAS,EAAEzC,gBAAgB;MAAE0C,QAAQ,EAAE;IAAQ;GACzD,EAAC;IACF9C,GAAG,EAAEA;EAAG,IAEPyB,aAAa,CAACtB,OAAO,CAAC,CAE1B,EACAD,OAAO,IAAI2B,KAAC,CAAAC,aAAA,CAAAiB,aAAa,EAAG,MAC5B;AAEP,CAAC;AAGHlD,mBAAmB,CAACmD,SAAS,GAAG;EAC9B/C,mBAAmB,EAAEgD,SAAS,CAACC,IAAI;EACnChD,OAAO,EAAE+C,SAAS,CAACE,IAAI;EACvBhD,OAAO,EAAE8C,SAAS,CAACG,KAAK,CAACC,UAAU;EACnCjD,gBAAgB,EAAE6C,SAAS,CAACK,SAAS,CAAC,CAACL,SAAS,CAACM,MAAM,EAAEN,SAAS,CAACO,MAAM,CAAC,CAAC;EAC3EnD,YAAY,EAAE4C,SAAS,CAACQ,KAAK,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;EACnDnD,eAAe,EAAE2C,SAAS,CAACC,IAAI;EAC/B3C,qBAAqB,EAAE0C,SAAS,CAACC,IAAI;EACrC1C,oBAAoB,EAAEyC,SAAS,CAACK,SAAS,CAAC,CAACL,SAAS,CAACO,MAAM,EAAEP,SAAS,CAACS,IAAI,CAAC,CAAC;EAC7EhD,eAAe,EAAEuC,SAAS,CAACE,IAAI;EAC/BvC,YAAY,EAAEqC,SAAS,CAACM;CACzB;AAED1D,mBAAmB,CAAC8D,WAAW,GAAG,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}