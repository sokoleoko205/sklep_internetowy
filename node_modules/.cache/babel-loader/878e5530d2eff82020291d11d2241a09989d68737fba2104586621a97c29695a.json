{"ast":null,"code":"import { useRef, useCallback } from 'react';\nvar useDebouncedCallback = function (callback, delay) {\n  var timeout = useRef();\n  return useCallback(function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var handler = function () {\n      clearTimeout(timeout.current);\n      callback.apply(void 0, args);\n    };\n    clearTimeout(timeout.current);\n    timeout.current = setTimeout(handler, delay);\n  }, [callback, delay]);\n};\nexport { useDebouncedCallback };","map":{"version":3,"names":["useDebouncedCallback","callback","delay","timeout","useRef","useCallback","args","_i","arguments","length","handler","clearTimeout","current","apply","setTimeout"],"sources":["C:\\Users\\5m\\node_modules\\@coreui\\react-pro\\src\\hooks\\useDebouncedCallback.ts"],"sourcesContent":["import { useRef, useCallback } from 'react'\n\nexport const useDebouncedCallback = <F extends Function>(callback: F, delay: number) => {\n  const timeout = useRef<ReturnType<typeof setTimeout>>()\n\n  return useCallback(\n    (...args: any[]) => {\n      const handler = () => {\n        clearTimeout(timeout.current)\n        callback(...args)\n      }\n\n      clearTimeout(timeout.current)\n      timeout.current = setTimeout(handler, delay)\n    },\n    [callback, delay],\n  )\n}\n"],"mappings":";AAEa,IAAAA,oBAAoB,GAAG,SAAAA,CAAqBC,QAAW,EAAEC,KAAa;EACjF,IAAMC,OAAO,GAAGC,MAAM,EAAiC;EAEvD,OAAOC,WAAW,CAChB;IAAC,IAAcC,IAAA;SAAd,IAAcC,EAAA,MAAdA,EAAc,GAAAC,SAAA,CAAAC,MAAA,EAAdF,EAAc;MAAdD,IAAc,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;IACb,IAAMG,OAAO,GAAG,SAAAA,CAAA;MACdC,YAAY,CAACR,OAAO,CAACS,OAAO,CAAC;MAC7BX,QAAQ,CAAAY,KAAA,SAAIP,IAAI,CAAC;IACnB,CAAC;IAEDK,YAAY,CAACR,OAAO,CAACS,OAAO,CAAC;IAC7BT,OAAO,CAACS,OAAO,GAAGE,UAAU,CAACJ,OAAO,EAAER,KAAK,CAAC;EAC9C,CAAC,EACD,CAACD,QAAQ,EAAEC,KAAK,CAAC,CAClB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}