{"ast":null,"code":"import { __rest, __assign } from '../../packages/coreui-react-pro/node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport classNames from '../../_virtual/index.js';\nimport PropTypes from 'prop-types';\nimport { CPagination } from '../pagination/CPagination.js';\nimport { CPaginationItem } from '../pagination/CPaginationItem.js';\nvar CSmartPagination = forwardRef(function (_a, ref) {\n  var className = _a.className,\n    _b = _a.activePage,\n    activePage = _b === void 0 ? 1 : _b,\n    _c = _a.align,\n    align = _c === void 0 ? 'start' : _c,\n    _d = _a.arrows,\n    arrows = _d === void 0 ? true : _d,\n    _e = _a.dots,\n    dots = _e === void 0 ? true : _e,\n    _f = _a.doubleArrows,\n    doubleArrows = _f === void 0 ? true : _f,\n    _g = _a.firstButton,\n    firstButton = _g === void 0 ? React.createElement(React.Fragment, null, \"\\u00AB\") : _g,\n    _h = _a.lastButton,\n    lastButton = _h === void 0 ? React.createElement(React.Fragment, null, \"\\u00BB\") : _h,\n    _j = _a.limit,\n    limit = _j === void 0 ? 5 : _j,\n    _k = _a.nextButton,\n    nextButton = _k === void 0 ? React.createElement(React.Fragment, null, \"\\u203A\") : _k,\n    onActivePageChange = _a.onActivePageChange,\n    pages = _a.pages,\n    _l = _a.previousButton,\n    previousButton = _l === void 0 ? React.createElement(React.Fragment, null, \"\\u2039\") : _l,\n    size = _a.size,\n    rest = __rest(_a, [\"className\", \"activePage\", \"align\", \"arrows\", \"dots\", \"doubleArrows\", \"firstButton\", \"lastButton\", \"limit\", \"nextButton\", \"onActivePageChange\", \"pages\", \"previousButton\", \"size\"]);\n  var showDots = function () {\n    return dots && limit > 4 && limit < pages;\n  }();\n  var maxPrevItems = function () {\n    return Math.floor((limit - 1) / 2);\n  }();\n  var maxNextItems = function () {\n    return Math.ceil((limit - 1) / 2);\n  }();\n  var beforeDots = function () {\n    return showDots && activePage > maxPrevItems + 1;\n  }();\n  var afterDots = function () {\n    return showDots && activePage < pages - maxNextItems;\n  }();\n  var computedLimit = function () {\n    return limit - (afterDots ? 1 : 0) - (beforeDots ? 1 : 0);\n  }();\n  var range = function () {\n    return activePage + maxNextItems;\n  }();\n  var lastItem = function () {\n    return range >= pages ? pages : range - (afterDots ? 1 : 0);\n  }();\n  var itemsAmount = function () {\n    return pages < computedLimit ? pages : computedLimit;\n  }();\n  var items = function () {\n    return activePage - maxPrevItems <= 1 ? Array.from({\n      length: itemsAmount\n    }, function (_v, i) {\n      return i + 1;\n    }) : Array.from({\n      length: itemsAmount\n    }, function (_v, i) {\n      return lastItem - i;\n    }).reverse();\n  }();\n  var setPage = function (number) {\n    if (number !== activePage) {\n      onActivePageChange && onActivePageChange(number);\n    }\n  };\n  return React.createElement(CPagination, __assign({\n    className: classNames(\"justify-content-\".concat(align), className),\n    \"aria-label\": \"pagination\",\n    size: size\n  }, rest, {\n    ref: ref\n  }), doubleArrows && React.createElement(CPaginationItem, {\n    onClick: function () {\n      return setPage(1);\n    },\n    \"aria-label\": \"Go to first page\",\n    \"aria-disabled\": activePage === 1,\n    disabled: activePage === 1\n  }, firstButton), arrows && React.createElement(CPaginationItem, {\n    onClick: function () {\n      return setPage(activePage - 1);\n    },\n    \"aria-label\": \"Go to previous page\",\n    \"aria-disabled\": activePage === 1,\n    disabled: activePage === 1\n  }, previousButton), beforeDots && React.createElement(CPaginationItem, {\n    role: \"separator\",\n    disabled: true\n  }, \"\\u2026\"), items.map(function (i) {\n    return React.createElement(CPaginationItem, {\n      onClick: function () {\n        return setPage(i);\n      },\n      \"aria-label\": activePage === i ? \"Current page \".concat(i) : \"Go to page \".concat(i),\n      active: activePage === i,\n      key: i\n    }, i);\n  }), afterDots && React.createElement(CPaginationItem, {\n    role: \"separator\",\n    disabled: true\n  }, \"\\u2026\"), arrows && React.createElement(CPaginationItem, {\n    onClick: function () {\n      return setPage(activePage + 1);\n    },\n    \"aria-label\": \"Go to next page\",\n    \"aria-disabled\": activePage === pages,\n    disabled: activePage === pages\n  }, nextButton), doubleArrows && React.createElement(CPaginationItem, {\n    onClick: function () {\n      return setPage(pages);\n    },\n    \"aria-label\": \"Go to last page\",\n    \"aria-disabled\": activePage === pages,\n    disabled: activePage === pages\n  }, lastButton));\n});\nCSmartPagination.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string]),\n  activePage: PropTypes.number,\n  dots: PropTypes.bool,\n  arrows: PropTypes.bool,\n  doubleArrows: PropTypes.bool,\n  firstButton: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  previousButton: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  nextButton: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  lastButton: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  size: PropTypes.oneOf(['sm', 'lg']),\n  align: PropTypes.oneOf(['start', 'center', 'end']),\n  limit: PropTypes.number,\n  pages: PropTypes.number.isRequired,\n  onActivePageChange: PropTypes.func\n};\nCSmartPagination.displayName = 'CSmartPagination';\nexport { CSmartPagination };","map":{"version":3,"names":["CSmartPagination","forwardRef","_a","ref","className","_b","activePage","_c","align","_d","arrows","_e","dots","_f","doubleArrows","_g","firstButton","React","createElement","Fragment","_h","lastButton","_j","limit","_k","nextButton","onActivePageChange","pages","_l","previousButton","size","rest","__rest","showDots","maxPrevItems","Math","floor","maxNextItems","ceil","beforeDots","afterDots","computedLimit","range","lastItem","itemsAmount","items","Array","from","length","_v","i","reverse","setPage","number","CPagination","__assign","classNames","concat","CPaginationItem","onClick","disabled","role","map","active","key","propTypes","PropTypes","oneOfType","string","bool","node","oneOf","isRequired","func","displayName"],"sources":["C:\\Users\\5m\\node_modules\\@coreui\\react-pro\\src\\components\\smart-pagination\\CSmartPagination.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode, HTMLAttributes } from 'react'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport { CPagination, CPaginationItem } from './../pagination'\n\nexport interface CSmartPaginationProps extends HTMLAttributes<HTMLUListElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Current page number.\n   */\n  activePage?: number\n  /**\n   * Show/hide dots.\n   */\n  dots?: boolean\n  /**\n   * Show/hide arrows.\n   */\n  arrows?: boolean\n  /**\n   * Show double arrows buttons.\n   */\n  doubleArrows?: boolean\n  /**\n   * The content of 'firstButton' button.\n   *\n   * @default '<React.Fragment>&laquo;</React.Fragment>''\n   */\n  firstButton?: ReactNode | string\n  /**\n   * The content of 'previousButton' button.\n   *\n   * @default '<React.Fragment>&lsaquo;</React.Fragment>'\n   */\n  previousButton?: ReactNode | string\n  /**\n   * The content of 'nextButton' button.\n   *\n   * @default '<React.Fragment>&rsaquo;</React.Fragment>''\n   */\n  nextButton?: ReactNode | string\n  /**\n   * The content of 'lastButton' button.\n   *\n   * @default '<React.Fragment>&raquo;</React.Fragment>'\n   */\n  lastButton?: ReactNode | string\n  /**\n   * Size of pagination, valid values: 'sm', 'lg'.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Horizontall align.\n   */\n  align?: 'start' | 'center' | 'end'\n  /**\n   * Maximum items number.\n   */\n  limit?: number\n  /**\n   * Number of pages.\n   */\n  pages: number\n  /**\n   * On active page change callback.\n   */\n  onActivePageChange?: (activePage: number) => void\n}\n\nexport const CSmartPagination = forwardRef<HTMLUListElement, CSmartPaginationProps>(\n  (\n    {\n      className,\n      activePage = 1,\n      align = 'start',\n      arrows = true,\n      dots = true,\n      doubleArrows = true,\n      firstButton = <React.Fragment>&laquo;</React.Fragment>,\n      lastButton = <React.Fragment>&raquo;</React.Fragment>,\n      limit = 5,\n      nextButton = <React.Fragment>&rsaquo;</React.Fragment>,\n      onActivePageChange,\n      pages,\n      previousButton = <React.Fragment>&lsaquo;</React.Fragment>,\n      size,\n      ...rest\n    },\n    ref,\n  ) => {\n    const showDots: boolean = (() => {\n      return dots && limit > 4 && limit < pages\n    })()\n\n    const maxPrevItems: number = (() => {\n      return Math.floor((limit - 1) / 2)\n    })()\n\n    const maxNextItems: number = (() => {\n      return Math.ceil((limit - 1) / 2)\n    })()\n\n    const beforeDots: boolean = (() => {\n      return showDots && activePage > maxPrevItems + 1\n    })()\n\n    const afterDots: boolean = (() => {\n      return showDots && activePage < pages - maxNextItems\n    })()\n\n    const computedLimit: number = (() => {\n      return limit - (afterDots ? 1 : 0) - (beforeDots ? 1 : 0)\n    })()\n\n    const range: number = (() => {\n      return activePage + maxNextItems\n    })()\n\n    const lastItem: number = (() => {\n      return range >= pages ? pages : range - (afterDots ? 1 : 0)\n    })()\n\n    const itemsAmount: number = (() => {\n      return pages < computedLimit ? pages : computedLimit\n    })()\n\n    const items: number[] = (() => {\n      return activePage - maxPrevItems <= 1\n        ? Array.from(\n            {\n              length: itemsAmount,\n            },\n            (_v, i) => i + 1,\n          )\n        : Array.from(\n            {\n              length: itemsAmount,\n            },\n            (_v, i) => {\n              return lastItem - i\n            },\n          ).reverse()\n    })()\n\n    const setPage = (number: number): void => {\n      if (number !== activePage) {\n        onActivePageChange && onActivePageChange(number)\n      }\n    }\n\n    return (\n      <CPagination\n        className={classNames(`justify-content-${align}`, className)}\n        aria-label=\"pagination\"\n        size={size}\n        {...rest}\n        ref={ref}\n      >\n        {doubleArrows && (\n          <CPaginationItem\n            onClick={() => setPage(1)}\n            aria-label=\"Go to first page\"\n            aria-disabled={activePage === 1}\n            disabled={activePage === 1}\n          >\n            {firstButton}\n          </CPaginationItem>\n        )}\n        {arrows && (\n          <CPaginationItem\n            onClick={() => setPage(activePage - 1)}\n            aria-label=\"Go to previous page\"\n            aria-disabled={activePage === 1}\n            disabled={activePage === 1}\n          >\n            {previousButton}\n          </CPaginationItem>\n        )}\n        {beforeDots && (\n          <CPaginationItem role=\"separator\" disabled>\n            …\n          </CPaginationItem>\n        )}\n        {items.map((i) => {\n          return (\n            <CPaginationItem\n              onClick={() => setPage(i)}\n              aria-label={activePage === i ? `Current page ${i}` : `Go to page ${i}`}\n              active={activePage === i}\n              key={i}\n            >\n              {i}\n            </CPaginationItem>\n          )\n        })}\n        {afterDots && (\n          <CPaginationItem role=\"separator\" disabled>\n            …\n          </CPaginationItem>\n        )}\n        {arrows && (\n          <CPaginationItem\n            onClick={() => setPage(activePage + 1)}\n            aria-label=\"Go to next page\"\n            aria-disabled={activePage === pages}\n            disabled={activePage === pages}\n          >\n            {nextButton}\n          </CPaginationItem>\n        )}\n        {doubleArrows && (\n          <CPaginationItem\n            onClick={() => setPage(pages)}\n            aria-label=\"Go to last page\"\n            aria-disabled={activePage === pages}\n            disabled={activePage === pages}\n          >\n            {lastButton}\n          </CPaginationItem>\n        )}\n      </CPagination>\n    )\n  },\n)\n\nCSmartPagination.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string]),\n  activePage: PropTypes.number,\n  dots: PropTypes.bool,\n  arrows: PropTypes.bool,\n  doubleArrows: PropTypes.bool,\n  firstButton: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  previousButton: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  nextButton: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  lastButton: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  size: PropTypes.oneOf(['sm', 'lg']),\n  align: PropTypes.oneOf(['start', 'center', 'end']),\n  limit: PropTypes.number,\n  pages: PropTypes.number.isRequired,\n  onActivePageChange: PropTypes.func,\n}\n\nCSmartPagination.displayName = 'CSmartPagination'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}